services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: synthform
      POSTGRES_USER: synthform
      POSTGRES_PASSWORD: synthform
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  tailscale:
    image: tailscale/tailscale:latest
    hostname: synthform
    environment:
      - TS_AUTHKEY=${TAILSCALE_CLIENT_SECRET}
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - tailscale_data:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    ports:
      - "7175:7175"

  server:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
      - tailscale
    environment:
      - DATABASE_URL=postgresql://synthform:synthform@db:5432/synthform
      - REDIS_URL=redis://redis:6379/0
    network_mode: service:tailscale
    command: >
      sh -c "uv run python manage.py migrate &&
             uv run daphne -b 0.0.0.0 -p 7175 synthform.asgi:application"

  twitch:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://synthform:synthform@db:5432/synthform
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "4343:4343"
    command: uv run python -m events.services.twitch

  overlays:
    build:
      context: ./apps/overlays
      dockerfile: Dockerfile
    ports:
      - "8008:8008"

volumes:
  postgres_data:
  redis_data:
  tailscale_data: