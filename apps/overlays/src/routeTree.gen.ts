/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OmnibarRouteImport } from './routes/omnibar'
import { Route as LimitbreakRouteImport } from './routes/limitbreak'
import { Route as IndexRouteImport } from './routes/index'

const OmnibarRoute = OmnibarRouteImport.update({
  id: '/omnibar',
  path: '/omnibar',
  getParentRoute: () => rootRouteImport,
} as any)
const LimitbreakRoute = LimitbreakRouteImport.update({
  id: '/limitbreak',
  path: '/limitbreak',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/limitbreak': typeof LimitbreakRoute
  '/omnibar': typeof OmnibarRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/limitbreak': typeof LimitbreakRoute
  '/omnibar': typeof OmnibarRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/limitbreak': typeof LimitbreakRoute
  '/omnibar': typeof OmnibarRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/limitbreak' | '/omnibar'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/limitbreak' | '/omnibar'
  id: '__root__' | '/' | '/limitbreak' | '/omnibar'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LimitbreakRoute: typeof LimitbreakRoute
  OmnibarRoute: typeof OmnibarRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/omnibar': {
      id: '/omnibar'
      path: '/omnibar'
      fullPath: '/omnibar'
      preLoaderRoute: typeof OmnibarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/limitbreak': {
      id: '/limitbreak'
      path: '/limitbreak'
      fullPath: '/limitbreak'
      preLoaderRoute: typeof LimitbreakRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LimitbreakRoute: LimitbreakRoute,
  OmnibarRoute: OmnibarRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
