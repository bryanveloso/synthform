# Generated by Django 5.2.5 on 2025-08-27 23:20

import django.db.models.deletion
import django.utils.timezone
import encrypted_fields.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('streams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('twitch_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('youtube_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('discord_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('display_name', models.CharField(max_length=255)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
            ],
            options={
                'indexes': [models.Index(fields=['twitch_id'], name='events_memb_twitch__e2ae39_idx'), models.Index(fields=['created_at'], name='events_memb_created_26d3d3_idx')],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('twitch', 'Twitch'), ('youtube', 'YouTube'), ('discord', 'Discord')], db_index=True, default='twitch', max_length=20)),
                ('user_id', models.CharField(db_index=True, max_length=255)),
                ('access_token', encrypted_fields.fields.EncryptedTextField()),
                ('refresh_token', encrypted_fields.fields.EncryptedTextField()),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('scopes', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'indexes': [models.Index(fields=['platform', 'user_id'], name='events_toke_platfor_e61b38_idx'), models.Index(fields=['platform', 'created_at'], name='events_toke_platfor_f130bc_idx')],
                'unique_together': {('platform', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source', models.CharField(choices=[('twitch', 'Twitch'), ('patreon', 'Patreon'), ('discord', 'Discord')], db_index=True, max_length=20)),
                ('source_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('event_type', models.CharField(db_index=True, max_length=100)),
                ('payload', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('correlation_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('legacy_correlation_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='streams.session')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.member')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['source', 'event_type'], name='events_even_source_70744b_idx'), models.Index(fields=['timestamp'], name='events_even_timesta_f18d0e_idx'), models.Index(fields=['member', 'timestamp'], name='events_even_member__ba5ed7_idx'), models.Index(fields=['correlation_id'], name='events_even_correla_2f9f43_idx')],
            },
        ),
    ]
