[project]
name = "server"
version = "0.1.0"
description = "Synthform's Central Brain"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "channels[daphne]>=4.3.1",
    "django>=5.2.5",
    "twitchio[starlette]>=3.1.0",
    "psycopg>=3.2.1",
    "django-environ>=0.11.2",
    "obsws-python>=1.8.0",
    "redis>=5.2.0",
    "channels-redis>=4.3.0",
    "ruff>=0.12.10",
    "django-fernet-encrypted-fields>=0.3.0",
    "celery>=5.3.0",
    "numpy>=1.24.0",
    "websockets>=12.0",
    "whitenoise>=6.8.2",
    "sentry-sdk[django]>=2.37.0",
    "httpx>=0.25.0",
    "python-osc>=1.8.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".github",
  ".hg",
  ".mypy_cache",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  "migrations",
  "node_modules",
  "venv"
]
extend-include = ["*.pyi?"]
indent-width = 4
# Same as Black.
line-length = 88
# Assume Python >=3.12.
target-version = "py312"

[tool.ruff.format]
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Like Black, use double quotes for strings.
quote-style = "double"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
ignore = ["E501", "E741"]  # temporary
select = [
  "B",  # flake8-bugbear
  "E",  # Pycodestyle
  "F",  # Pyflakes
  "I",  # isort
  "UP"  # pyupgrade
]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = []
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
